{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n//IMPORTAMOS LA CLASE\nimport { Validators } from '@angular/forms';\n//import { Router } from 'express';\nlet LoginComponent = class LoginComponent {\n  //private nombre:Router | Servicio de rutas   || inyectamos el metodo login del servicio login\n  constructor(formBuilder, router, loginServicio) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.loginServicio = loginServicio;\n    //CREAMOS EL FORMULARIO\n    this.loginFormulario = this.formBuilder.group({\n      email: ['ejemplo@gmail.com', [Validators.required, Validators.email]],\n      pass: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {}\n  get email() {\n    return this.loginFormulario.controls.email;\n  }\n  get password() {\n    return this.loginFormulario.controls.pass;\n  }\n  //METODO QUE LLAMAREMOS, PARA EL BOTON INICIAR SESION\n  login() {\n    if (this.loginFormulario.valid) {\n      //console.log(\"Llamar al servicio de Login\");\n      this.loginServicio.login(this.loginFormulario.value).subscribe({\n        next: userData => {\n          console.log(userData);\n        },\n        error: errorData => {\n          console.error(errorData);\n        },\n        complete: () => {\n          console.info(\"Login completo\");\n        }\n      });\n      //NAVEGACION DEPSUES DEL LOGIN\n      this.router.navigateByUrl('/home');\n      //REINICIO DEL FORMULARIO\n      this.loginFormulario.reset();\n    } else {\n      this.loginFormulario.markAllAsTouched();\n      alert(\"Error al ingresar los datos\");\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  // standalone: true,\n  // imports: [CommonModule],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\n//INYECTAMOS EN EL CONSTRUCTOR\n], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","formBuilder","router","loginServicio","loginFormulario","group","email","required","pass","ngOnInit","controls","password","login","valid","value","subscribe","next","userData","console","log","error","errorData","complete","info","navigateByUrl","reset","markAllAsTouched","alert","__decorate","selector","templateUrl","styleUrl"],"sources":["/home/jota/Documentos/GitHub/ProAsix/src/app/pages/login/login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//IMPORTAMOS LA CLASE\nimport { FormBuilder, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\n//import { LoginService } from 'src/app/services/auth/login.service';\nimport { LoginRequest } from 'src/app/services/auth/loginRequest';\n//import { Router } from 'express';\n\n\n\n@Component({\n  selector: 'app-login',\n  // standalone: true,\n  // imports: [CommonModule],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\n//INYECTAMOS EN EL CONSTRUCTOR\nexport class LoginComponent implements OnInit {\n  //CREAMOS EL FORMULARIO\n  loginFormulario=this.formBuilder.group({\n    email:['ejemplo@gmail.com',[Validators.required, Validators.email]],\n    pass:['',[Validators.required]],\n  })\n  \n  //private nombre:Router | Servicio de rutas   || inyectamos el metodo login del servicio login\n  constructor(private formBuilder:FormBuilder, private router:Router, private loginServicio:LoginService ) { }\n  \n  ngOnInit():void{\n   }\n\n  get email(){\n    return this.loginFormulario.controls.email;\n  }\n\n  get password(){\n    return this.loginFormulario.controls.pass;\n  }\n\n  //METODO QUE LLAMAREMOS, PARA EL BOTON INICIAR SESION\n  login(){\n    if(this.loginFormulario.valid){\n      //console.log(\"Llamar al servicio de Login\");\n      this.loginServicio.login(this.loginFormulario.value as LoginRequest).subscribe({\n        next: (userData) => {\n          console.log(userData)\n        },\n        error: (errorData) => {\n          console.error(errorData);\n        },\n        complete: () => {\n          console.info(\"Login completo\")\n        }\n\n      })\n      \n      //NAVEGACION DEPSUES DEL LOGIN\n      this.router.navigateByUrl('/home');\n      \n      //REINICIO DEL FORMULARIO\n      this.loginFormulario.reset();\n\n    } else {\n      this.loginFormulario.markAllAsTouched();\n      alert(\"Error al ingresar los datos\");\n    }\n  }\n\n}\n\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD;AACA,SAAsBC,UAAU,QAAO,gBAAgB;AAIvD;AAYO,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzB;EACAC,YAAoBC,WAAuB,EAAUC,MAAa,EAAUC,aAA0B;IAAlF,KAAAF,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,aAAa,GAAbA,aAAa;IAPzF;IACA,KAAAC,eAAe,GAAC,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACrCC,KAAK,EAAC,CAAC,mBAAmB,EAAC,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACnEE,IAAI,EAAC,CAAC,EAAE,EAAC,CAACV,UAAU,CAACS,QAAQ,CAAC;KAC/B,CAAC;EAGyG;EAE3GE,QAAQA,CAAA,GACP;EAED,IAAIH,KAAKA,CAAA;IACP,OAAO,IAAI,CAACF,eAAe,CAACM,QAAQ,CAACJ,KAAK;EAC5C;EAEA,IAAIK,QAAQA,CAAA;IACV,OAAO,IAAI,CAACP,eAAe,CAACM,QAAQ,CAACF,IAAI;EAC3C;EAEA;EACAI,KAAKA,CAAA;IACH,IAAG,IAAI,CAACR,eAAe,CAACS,KAAK,EAAC;MAC5B;MACA,IAAI,CAACV,aAAa,CAACS,KAAK,CAAC,IAAI,CAACR,eAAe,CAACU,KAAqB,CAAC,CAACC,SAAS,CAAC;QAC7EC,IAAI,EAAGC,QAAQ,IAAI;UACjBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACvB,CAAC;QACDG,KAAK,EAAGC,SAAS,IAAI;UACnBH,OAAO,CAACE,KAAK,CAACC,SAAS,CAAC;QAC1B,CAAC;QACDC,QAAQ,EAAEA,CAAA,KAAK;UACbJ,OAAO,CAACK,IAAI,CAAC,gBAAgB,CAAC;QAChC;OAED,CAAC;MAEF;MACA,IAAI,CAACrB,MAAM,CAACsB,aAAa,CAAC,OAAO,CAAC;MAElC;MACA,IAAI,CAACpB,eAAe,CAACqB,KAAK,EAAE;IAE9B,CAAC,MAAM;MACL,IAAI,CAACrB,eAAe,CAACsB,gBAAgB,EAAE;MACvCC,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF;CAED;AAlDY5B,cAAc,GAAA6B,UAAA,EAR1B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,WAAW;EACrB;EACA;EACAC,WAAW,EAAE,wBAAwB;EACrCC,QAAQ,EAAE;CACX;AACD;AAAA,C,EACahC,cAAc,CAkD1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}