{"ast":null,"code":"import { switchMap, map } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport class UserService {\n  constructor(afs, afAuth) {\n    this.afs = afs;\n    this.afAuth = afAuth;\n  }\n  getCurrentUser() {\n    return this.afAuth.authState.pipe(map(user => user?.uid));\n  }\n  addFavoriteArtist(artist) {\n    return this.getCurrentUser().pipe(switchMap(uid => {\n      if (uid) {\n        const userRef = this.afs.collection('users').doc(uid);\n        return userRef.collection('favorites').doc('artists').set({\n          [artist.id]: artist\n        }, {\n          merge: true\n        });\n      } else {\n        return of(null);\n      }\n    })).toPromise();\n  }\n  addFavoriteAlbum(album) {\n    return this.getCurrentUser().pipe(switchMap(uid => {\n      if (uid) {\n        const userRef = this.afs.collection('users').doc(uid);\n        return userRef.collection('favorites').doc('albums').set({\n          [album.id]: album\n        }, {\n          merge: true\n        });\n      } else {\n        return of(null);\n      }\n    })).toPromise();\n  }\n  addFavoriteTrack(track) {\n    return this.getCurrentUser().pipe(switchMap(uid => {\n      if (uid) {\n        const userRef = this.afs.collection('users').doc(uid);\n        return userRef.collection('favorites').doc('tracks').set({\n          [track.id]: track\n        }, {\n          merge: true\n        });\n      } else {\n        return of(null);\n      }\n    })).toPromise();\n  }\n  getFavorites() {\n    return this.getCurrentUser().pipe(switchMap(uid => {\n      if (uid) {\n        const userRef = this.afs.collection('users').doc(uid);\n        return userRef.collection('favorites').valueChanges();\n      } else {\n        return of(null);\n      }\n    }));\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["switchMap","map","of","UserService","constructor","afs","afAuth","getCurrentUser","authState","pipe","user","uid","addFavoriteArtist","artist","userRef","collection","doc","set","id","merge","toPromise","addFavoriteAlbum","album","addFavoriteTrack","track","getFavorites","valueChanges","_","i0","ɵɵinject","i1","AngularFirestore","i2","AngularFireAuth","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(\r\n    private afs: AngularFirestore,\r\n     private afAuth: AngularFireAuth) {}\r\n\r\n  private getCurrentUser() {\r\n    return this.afAuth.authState.pipe(map(user => user?.uid));\r\n  }\r\n\r\n  addFavoriteArtist(artist: any) {\r\n    return this.getCurrentUser().pipe(\r\n      switchMap(uid => {\r\n        if (uid) {\r\n          const userRef = this.afs.collection('users').doc(uid);\r\n          return userRef.collection('favorites').doc('artists').set({\r\n            [artist.id]: artist\r\n          }, { merge: true });\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    ).toPromise();\r\n  }\r\n\r\n  addFavoriteAlbum(album: any) {\r\n    return this.getCurrentUser().pipe(\r\n      switchMap(uid => {\r\n        if (uid) {\r\n          const userRef = this.afs.collection('users').doc(uid);\r\n          return userRef.collection('favorites').doc('albums').set({\r\n            [album.id]: album\r\n          }, { merge: true });\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    ).toPromise();\r\n  }\r\n\r\n  addFavoriteTrack(track: any) {\r\n    return this.getCurrentUser().pipe(\r\n      switchMap(uid => {\r\n        if (uid) {\r\n          const userRef = this.afs.collection('users').doc(uid);\r\n          return userRef.collection('favorites').doc('tracks').set({\r\n            [track.id]: track\r\n          }, { merge: true });\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    ).toPromise();\r\n  }\r\n\r\n  getFavorites() {\r\n    return this.getCurrentUser().pipe(\r\n      switchMap(uid => {\r\n        if (uid) {\r\n          const userRef = this.afs.collection('users').doc(uid);\r\n          return userRef.collection('favorites').valueChanges();\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}