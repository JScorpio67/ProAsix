{"ast":null,"code":"\"use strict\";\n\n// import { Injectable } from '@angular/core';\n// import { SignRequest } from './signRequest';\n// import { HttpClient, HttpErrorResponse } from '@angular/common/http';\n// import { Observable, catchError, throwError, BehaviorSubject, tap } from 'rxjs';\n// //hara falta user en el register?\n// import { User } from '../user';\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class SignService {\n//   constructor(private http: HttpClient) { }\n//   //CREAMOS EL METODO SIGN\n//   sign(formulario_input:SignRequest){\n//     console.log(formulario_input);\n//     return this.http.get('././assets/data.json')\n//   }\n//   //MANEJADOR DE ERRORES\n//   private handlerError(error:HttpErrorResponse){\n//     if (error.status===0){\n//       console.error('Se ha producido un error', error.error)\n//     } else {\n//       console.error('Backend retorno el codigo de estado', error.status, error.error);\n//       //retornamos la excepcion.\n//     } return throwError (()=> new Error('Algo falló, intente nuevamente'));\n//   }\n//SUSCRIBCION DE LOS COMPONENTES\n// get userData():Observable<User>{\n//   return this.currentUserData.asObservable();\n// }\n// get userLoginOn():Observable<boolean>{\n//   return this.currentUserLoginOn.asObservable();\n// }\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\services\\auth\\sign\\sign.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\r\n// import { SignRequest } from './signRequest';\r\n// import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n// import { Observable, catchError, throwError, BehaviorSubject, tap } from 'rxjs';\r\n// //hara falta user en el register?\r\n// import { User } from '../user';\r\n\r\n// @Injectable({\r\n//   providedIn: 'root'\r\n// })\r\n// export class SignService {\r\n\r\n//   constructor(private http: HttpClient) { }\r\n\r\n//   //CREAMOS EL METODO SIGN\r\n//   sign(formulario_input:SignRequest){\r\n//     console.log(formulario_input);\r\n//     return this.http.get('././assets/data.json')\r\n//   }\r\n\r\n\r\n//   //MANEJADOR DE ERRORES\r\n//   private handlerError(error:HttpErrorResponse){\r\n//     if (error.status===0){\r\n//       console.error('Se ha producido un error', error.error)\r\n//     } else {\r\n//       console.error('Backend retorno el codigo de estado', error.status, error.error);\r\n//       //retornamos la excepcion.\r\n//     } return throwError (()=> new Error('Algo falló, intente nuevamente'));\r\n//   }\r\n\r\n  //SUSCRIBCION DE LOS COMPONENTES\r\n  // get userData():Observable<User>{\r\n  //   return this.currentUserData.asObservable();\r\n  // }\r\n\r\n  // get userLoginOn():Observable<boolean>{\r\n  //   return this.currentUserLoginOn.asObservable();\r\n  // }\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AAEA;AACA;AACA;AAEF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}