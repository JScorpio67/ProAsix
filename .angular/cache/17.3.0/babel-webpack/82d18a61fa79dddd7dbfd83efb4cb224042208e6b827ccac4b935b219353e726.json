{"ast":null,"code":"import { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SignService {\n  constructor(http) {\n    this.http = http;\n  }\n  //CREAMOS EL METODO SIGN\n  sign(formulario_input) {\n    console.log(formulario_input);\n    return this.http.get('././assets/data.json');\n  }\n  //MANEJADOR DE ERRORES\n  handlerError(error) {\n    if (error.status === 0) {\n      console.error('Se ha producido un error', error.error);\n    } else {\n      console.error('Backend retorno el codigo de estado', error.status, error.error);\n      //retornamos la excepcion.\n    }\n    return throwError(() => new Error('Algo falló, intente nuevamente'));\n  }\n  static #_ = this.ɵfac = function SignService_Factory(t) {\n    return new (t || SignService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SignService,\n    factory: SignService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["throwError","SignService","constructor","http","sign","formulario_input","console","log","get","handlerError","error","status","Error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\services\\auth\\sign\\sign.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { SignRequest } from './signRequest';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, catchError, throwError, BehaviorSubject, tap } from 'rxjs';\r\n//hara falta user en el register?\r\nimport { User } from '../user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //CREAMOS EL METODO SIGN\r\n  sign(formulario_input:SignRequest){\r\n    console.log(formulario_input);\r\n    return this.http.get('././assets/data.json')\r\n  }\r\n\r\n\r\n  //MANEJADOR DE ERRORES\r\n  private handlerError(error:HttpErrorResponse){\r\n    if (error.status===0){\r\n      console.error('Se ha producido un error', error.error)\r\n    } else {\r\n      console.error('Backend retorno el codigo de estado', error.status, error.error);\r\n      //retornamos la excepcion.\r\n    } return throwError (()=> new Error('Algo falló, intente nuevamente'));\r\n  }\r\n\r\n  //SUSCRIBCION DE LOS COMPONENTES\r\n  // get userData():Observable<User>{\r\n  //   return this.currentUserData.asObservable();\r\n  // }\r\n\r\n  // get userLoginOn():Observable<boolean>{\r\n  //   return this.currentUserLoginOn.asObservable();\r\n  // }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAGA,SAAiCA,UAAU,QAA8B,MAAM;;;AAO/E,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExC;EACAC,IAAIA,CAACC,gBAA4B;IAC/BC,OAAO,CAACC,GAAG,CAACF,gBAAgB,CAAC;IAC7B,OAAO,IAAI,CAACF,IAAI,CAACK,GAAG,CAAC,sBAAsB,CAAC;EAC9C;EAGA;EACQC,YAAYA,CAACC,KAAuB;IAC1C,IAAIA,KAAK,CAACC,MAAM,KAAG,CAAC,EAAC;MACnBL,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACA,KAAK,CAAC;IACxD,CAAC,MAAM;MACLJ,OAAO,CAACI,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACC,MAAM,EAAED,KAAK,CAACA,KAAK,CAAC;MAC/E;IACF;IAAE,OAAOV,UAAU,CAAE,MAAK,IAAIY,KAAK,CAAC,gCAAgC,CAAC,CAAC;EACxE;EAAC,QAAAC,CAAA,G;qBAnBUZ,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}