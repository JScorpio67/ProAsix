{"ast":null,"code":"import { switchMap, map } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport class UserService {\n  constructor(afs, afAuth) {\n    this.afs = afs;\n    this.afAuth = afAuth;\n  }\n  getCurrentUser() {\n    return this.afAuth.authState.pipe(map(user => {\n      console.log('Current user:', user);\n      return user?.uid;\n    }));\n  }\n  addFavoriteArtist(artist) {\n    return this.getCurrentUser().pipe(switchMap(uid => {\n      console.log('User ID:', uid);\n      if (uid) {\n        const userRef = this.afs.collection('user').doc(uid);\n        console.log('Adding favorite artist:', artist);\n        return userRef.collection('favorites').doc('artists').set({\n          [artist.id]: artist\n        }, {\n          merge: true\n        });\n      } else {\n        console.error('No user ID found');\n        return of(null);\n      }\n    })).toPromise().then(() => {\n      console.log('Artist added successfully');\n    }).catch(error => {\n      console.error('Error adding artist:', error);\n    });\n  }\n  addFavoriteAlbum(album) {\n    return this.getCurrentUser().pipe(switchMap(uid => {\n      console.log('User ID:', uid);\n      if (uid) {\n        const userRef = this.afs.collection('user').doc(uid);\n        console.log('Adding favorite album:', album);\n        return userRef.collection('favorites').doc('albums').set({\n          [album.id]: album\n        }, {\n          merge: true\n        });\n      } else {\n        console.error('No user ID found');\n        return of(null);\n      }\n    })).toPromise().then(() => {\n      console.log('Album added successfully');\n    }).catch(error => {\n      console.error('Error adding album:', error);\n    });\n  }\n  addFavoriteTrack(track) {\n    return this.getCurrentUser().pipe(switchMap(uid => {\n      console.log('User ID:', uid);\n      if (uid) {\n        const userRef = this.afs.collection('user').doc(uid);\n        console.log('Adding favorite track:', track);\n        return userRef.collection('favorites').doc('tracks').set({\n          [track.id]: track\n        }, {\n          merge: true\n        });\n      } else {\n        console.error('No user ID found');\n        return of(null);\n      }\n    })).toPromise().then(() => {\n      console.log('Track added successfully');\n    }).catch(error => {\n      console.error('Error adding track:', error);\n    });\n  }\n  getFavorites() {\n    return this.getCurrentUser().pipe(switchMap(uid => {\n      console.log('User ID:', uid);\n      if (uid) {\n        const userRef = this.afs.collection('user').doc(uid);\n        console.log('Fetching favorite items');\n        return userRef.collection('favorites').valueChanges();\n      } else {\n        console.error('No user ID found');\n        return of(null);\n      }\n    }));\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["switchMap","map","of","UserService","constructor","afs","afAuth","getCurrentUser","authState","pipe","user","console","log","uid","addFavoriteArtist","artist","userRef","collection","doc","set","id","merge","error","toPromise","then","catch","addFavoriteAlbum","album","addFavoriteTrack","track","getFavorites","valueChanges","_","i0","ɵɵinject","i1","AngularFirestore","i2","AngularFireAuth","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(\r\n    private afs: AngularFirestore,\r\n    private afAuth: AngularFireAuth\r\n  ) {}\r\n\r\n  private getCurrentUser() {\r\n    return this.afAuth.authState.pipe(\r\n      map(user => {\r\n        console.log('Current user:', user);\r\n        return user?.uid;\r\n      })\r\n    );\r\n  }\r\n\r\n  addFavoriteArtist(artist: any) {\r\n    return this.getCurrentUser().pipe(\r\n      switchMap(uid => {\r\n        console.log('User ID:', uid);\r\n        if (uid) {\r\n          const userRef = this.afs.collection('user').doc(uid);\r\n          console.log('Adding favorite artist:', artist);\r\n          return userRef.collection('favorites').doc('artists').set({\r\n            [artist.id]: artist\r\n          }, { merge: true });\r\n        } else {\r\n          console.error('No user ID found');\r\n          return of(null);\r\n        }\r\n      })\r\n    ).toPromise().then(() => {\r\n      console.log('Artist added successfully');\r\n    }).catch(error => {\r\n      console.error('Error adding artist:', error);\r\n    });\r\n  }\r\n\r\n  addFavoriteAlbum(album: any) {\r\n    return this.getCurrentUser().pipe(\r\n      switchMap(uid => {\r\n        console.log('User ID:', uid);\r\n        if (uid) {\r\n          const userRef = this.afs.collection('user').doc(uid);\r\n          console.log('Adding favorite album:', album);\r\n          return userRef.collection('favorites').doc('albums').set({\r\n            [album.id]: album\r\n          }, { merge: true });\r\n        } else {\r\n          console.error('No user ID found');\r\n          return of(null);\r\n        }\r\n      })\r\n    ).toPromise().then(() => {\r\n      console.log('Album added successfully');\r\n    }).catch(error => {\r\n      console.error('Error adding album:', error);\r\n    });\r\n  }\r\n\r\n  addFavoriteTrack(track: any) {\r\n    return this.getCurrentUser().pipe(\r\n      switchMap(uid => {\r\n        console.log('User ID:', uid);\r\n        if (uid) {\r\n          const userRef = this.afs.collection('user').doc(uid);\r\n          console.log('Adding favorite track:', track);\r\n          return userRef.collection('favorites').doc('tracks').set({\r\n            [track.id]: track\r\n          }, { merge: true });\r\n        } else {\r\n          console.error('No user ID found');\r\n          return of(null);\r\n        }\r\n      })\r\n    ).toPromise().then(() => {\r\n      console.log('Track added successfully');\r\n    }).catch(error => {\r\n      console.error('Error adding track:', error);\r\n    });\r\n  }\r\n\r\n  getFavorites() {\r\n    return this.getCurrentUser().pipe(\r\n      switchMap(uid => {\r\n        console.log('User ID:', uid);\r\n        if (uid) {\r\n          const userRef = this.afs.collection('user').doc(uid);\r\n          console.log('Fetching favorite items');\r\n          return userRef.collection('favorites').valueChanges();\r\n        } else {\r\n          console.error('No user ID found');\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AAC/C,SAASC,EAAE,QAAQ,MAAM;;;;AAKzB,OAAM,MAAOC,WAAW;EACtBC,YACUC,GAAqB,EACrBC,MAAuB;IADvB,KAAAD,GAAG,GAAHA,GAAG;IACH,KAAAC,MAAM,GAANA,MAAM;EACb;EAEKC,cAAcA,CAAA;IACpB,OAAO,IAAI,CAACD,MAAM,CAACE,SAAS,CAACC,IAAI,CAC/BR,GAAG,CAACS,IAAI,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;MAClC,OAAOA,IAAI,EAAEG,GAAG;IAClB,CAAC,CAAC,CACH;EACH;EAEAC,iBAAiBA,CAACC,MAAW;IAC3B,OAAO,IAAI,CAACR,cAAc,EAAE,CAACE,IAAI,CAC/BT,SAAS,CAACa,GAAG,IAAG;MACdF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,GAAG,CAAC;MAC5B,IAAIA,GAAG,EAAE;QACP,MAAMG,OAAO,GAAG,IAAI,CAACX,GAAG,CAACY,UAAU,CAAC,MAAM,CAAC,CAACC,GAAG,CAACL,GAAG,CAAC;QACpDF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,MAAM,CAAC;QAC9C,OAAOC,OAAO,CAACC,UAAU,CAAC,WAAW,CAAC,CAACC,GAAG,CAAC,SAAS,CAAC,CAACC,GAAG,CAAC;UACxD,CAACJ,MAAM,CAACK,EAAE,GAAGL;SACd,EAAE;UAAEM,KAAK,EAAE;QAAI,CAAE,CAAC;MACrB,CAAC,MAAM;QACLV,OAAO,CAACW,KAAK,CAAC,kBAAkB,CAAC;QACjC,OAAOpB,EAAE,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC,CACH,CAACqB,SAAS,EAAE,CAACC,IAAI,CAAC,MAAK;MACtBb,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,CAAC,CAACa,KAAK,CAACH,KAAK,IAAG;MACfX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACJ;EAEAI,gBAAgBA,CAACC,KAAU;IACzB,OAAO,IAAI,CAACpB,cAAc,EAAE,CAACE,IAAI,CAC/BT,SAAS,CAACa,GAAG,IAAG;MACdF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,GAAG,CAAC;MAC5B,IAAIA,GAAG,EAAE;QACP,MAAMG,OAAO,GAAG,IAAI,CAACX,GAAG,CAACY,UAAU,CAAC,MAAM,CAAC,CAACC,GAAG,CAACL,GAAG,CAAC;QACpDF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEe,KAAK,CAAC;QAC5C,OAAOX,OAAO,CAACC,UAAU,CAAC,WAAW,CAAC,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,GAAG,CAAC;UACvD,CAACQ,KAAK,CAACP,EAAE,GAAGO;SACb,EAAE;UAAEN,KAAK,EAAE;QAAI,CAAE,CAAC;MACrB,CAAC,MAAM;QACLV,OAAO,CAACW,KAAK,CAAC,kBAAkB,CAAC;QACjC,OAAOpB,EAAE,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC,CACH,CAACqB,SAAS,EAAE,CAACC,IAAI,CAAC,MAAK;MACtBb,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC,CAACa,KAAK,CAACH,KAAK,IAAG;MACfX,OAAO,CAACW,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAM,gBAAgBA,CAACC,KAAU;IACzB,OAAO,IAAI,CAACtB,cAAc,EAAE,CAACE,IAAI,CAC/BT,SAAS,CAACa,GAAG,IAAG;MACdF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,GAAG,CAAC;MAC5B,IAAIA,GAAG,EAAE;QACP,MAAMG,OAAO,GAAG,IAAI,CAACX,GAAG,CAACY,UAAU,CAAC,MAAM,CAAC,CAACC,GAAG,CAACL,GAAG,CAAC;QACpDF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEiB,KAAK,CAAC;QAC5C,OAAOb,OAAO,CAACC,UAAU,CAAC,WAAW,CAAC,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,GAAG,CAAC;UACvD,CAACU,KAAK,CAACT,EAAE,GAAGS;SACb,EAAE;UAAER,KAAK,EAAE;QAAI,CAAE,CAAC;MACrB,CAAC,MAAM;QACLV,OAAO,CAACW,KAAK,CAAC,kBAAkB,CAAC;QACjC,OAAOpB,EAAE,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC,CACH,CAACqB,SAAS,EAAE,CAACC,IAAI,CAAC,MAAK;MACtBb,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC,CAACa,KAAK,CAACH,KAAK,IAAG;MACfX,OAAO,CAACW,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAQ,YAAYA,CAAA;IACV,OAAO,IAAI,CAACvB,cAAc,EAAE,CAACE,IAAI,CAC/BT,SAAS,CAACa,GAAG,IAAG;MACdF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,GAAG,CAAC;MAC5B,IAAIA,GAAG,EAAE;QACP,MAAMG,OAAO,GAAG,IAAI,CAACX,GAAG,CAACY,UAAU,CAAC,MAAM,CAAC,CAACC,GAAG,CAACL,GAAG,CAAC;QACpDF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtC,OAAOI,OAAO,CAACC,UAAU,CAAC,WAAW,CAAC,CAACc,YAAY,EAAE;MACvD,CAAC,MAAM;QACLpB,OAAO,CAACW,KAAK,CAAC,kBAAkB,CAAC;QACjC,OAAOpB,EAAE,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC,CACH;EACH;EAAC,QAAA8B,CAAA,G;qBA/FU7B,WAAW,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpC,WAAW;IAAAqC,OAAA,EAAXrC,WAAW,CAAAsC,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}