{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/ProAsix/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { CommonModule, NgIf } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Router, RouterModule } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/firebase/auth.service';\nimport { ButtonProviders } from '../../services/auth/componentes/button-providers.component';\n//import { AuthService, Credential } from '../../../core/services/auth.service';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nlet NewSignUpComponent = class NewSignUpComponent {\n  constructor() {\n    this.hide = true;\n    this.formBuilder = inject(FormBuilder);\n    this.formularioHTML = this.formBuilder.group({\n      names: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      }),\n      lastName: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      }),\n      email: this.formBuilder.control('', {\n        validators: [Validators.required, Validators.email],\n        nonNullable: true\n      }),\n      password: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      })\n    });\n    this.servicioAuth = inject(AuthService);\n    this._router = inject(Router);\n    this._snackBar = inject(MatSnackBar);\n    //constructor() { }\n    //ngOnInit() { }\n  }\n  signUp() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.formularioHTML.invalid) return;\n      const credential = {\n        // || por si tiene un valor indefinido \n        email: _this.formularioHTML.value.email || '',\n        password: _this.formularioHTML.value.password || ''\n      };\n      try {\n        yield _this.servicioAuth.signInWithEmailAndPassword(credential);\n        _this._router.navigateByUrl('/');\n      } catch (error) {\n        console.error(error);\n      }\n      console.log(_this.formularioHTML.value);\n    })();\n  }\n  get isEmailValid() {\n    const control = this.formularioHTML.get('email');\n    const isInvalid = control?.invalid && control.touched;\n    if (isInvalid) {\n      return control.hasError('required') ? 'Este campo es obligatorio' : 'Introduce un formato de correo valido';\n    }\n    return false;\n  }\n  openSnackBar() {\n    return this._snackBar.open('Succesfully Sign up ðŸ˜€', 'Close', {\n      duration: 2500,\n      verticalPosition: 'top',\n      horizontalPosition: 'end'\n    });\n  }\n};\nNewSignUpComponent = __decorate([Component({\n  standalone: true,\n  imports: [MatFormFieldModule, MatInputModule, MatIconModule, MatButtonModule, ReactiveFormsModule, RouterModule, CommonModule, NgIf, ButtonProviders,\n  // MatSnackBar,\n  MatSnackBarModule],\n  selector: 'signupForm',\n  templateUrl: './form-signup.component.html',\n  styleUrls: ['./form-signup.component.css']\n})], NewSignUpComponent);\nexport default NewSignUpComponent;","map":{"version":3,"names":["Component","inject","CommonModule","NgIf","FormBuilder","ReactiveFormsModule","Validators","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","Router","RouterModule","AuthService","ButtonProviders","MatSnackBar","MatSnackBarModule","NewSignUpComponent","constructor","hide","formBuilder","formularioHTML","group","names","control","validators","required","nonNullable","lastName","email","password","servicioAuth","_router","_snackBar","signUp","_this","_asyncToGenerator","invalid","credential","value","signInWithEmailAndPassword","navigateByUrl","error","console","log","isEmailValid","get","isInvalid","touched","hasError","openSnackBar","open","duration","verticalPosition","horizontalPosition","__decorate","standalone","imports","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\auth\\form-signup\\form-signup.component.ts"],"sourcesContent":["import { Component, inject } from '@angular/core';\r\nimport { CommonModule, NgIf } from '@angular/common';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { Router, RouterModule } from '@angular/router';\r\n\r\nimport { AuthService, Credential } from 'src/app/services/auth/firebase/auth.service';\r\nimport { ButtonProviders } from '../../services/auth/componentes/button-providers.component'\r\n\r\n//import { AuthService, Credential } from '../../../core/services/auth.service';\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\ninterface interfazSignUpForm {\r\n  names: FormControl<string>;\r\n  lastName: FormControl<string>;\r\n  email: FormControl<string>;\r\n  password: FormControl<string>;\r\n}\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports:[\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    CommonModule,\r\n    NgIf,\r\n    ButtonProviders,\r\n    // MatSnackBar,\r\n    MatSnackBarModule,\r\n    \r\n  ],\r\n  selector: 'signupForm',\r\n  templateUrl: './form-signup.component.html',\r\n  styleUrls: ['./form-signup.component.css']\r\n})\r\n\r\nexport default class NewSignUpComponent{\r\n  hide = true;\r\n\r\n  formBuilder = inject(FormBuilder);\r\n\r\n  formularioHTML: FormGroup<interfazSignUpForm> = this.formBuilder.group({\r\n    names: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n    lastName: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n    email: this.formBuilder.control('', {\r\n      validators: [Validators.required, Validators.email],\r\n      nonNullable: true,\r\n    }),\r\n    password: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n  });\r\n\r\n  private servicioAuth = inject(AuthService)\r\n  private _router = inject(Router);\r\n  private _snackBar = inject(MatSnackBar);\r\n\r\n  async signUp(): Promise<void> {\r\n    if (this.formularioHTML.invalid) return;\r\n\r\n    const credential : Credential = {\r\n      // || por si tiene un valor indefinido \r\n      email: this.formularioHTML.value.email || '',\r\n      password: this.formularioHTML.value.password || '' ,\r\n    };\r\n\r\n    try {\r\n      await this.servicioAuth.signInWithEmailAndPassword(credential);\r\n      this._router.navigateByUrl('/');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n\r\n    console.log(this.formularioHTML.value)\r\n  }\r\n\r\n  get isEmailValid(): string | boolean {\r\n    const control = this.formularioHTML.get('email');\r\n\r\n    const isInvalid = control?.invalid && control.touched;\r\n\r\n    if (isInvalid) {\r\n      return control.hasError('required')\r\n        ? 'Este campo es obligatorio'\r\n        : 'Introduce un formato de correo valido';\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  openSnackBar() {\r\n    return this._snackBar.open('Succesfully Sign up ðŸ˜€', 'Close', {\r\n      duration: 2500,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'end',\r\n    });\r\n  }\r\n\r\n\r\n  //constructor() { }\r\n\r\n  //ngOnInit() { }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}