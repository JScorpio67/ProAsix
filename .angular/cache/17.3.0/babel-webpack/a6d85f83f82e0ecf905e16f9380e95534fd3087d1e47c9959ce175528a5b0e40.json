{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nexport default class NewLoginComponent {\n  logIn() {\n    if (this.form.invalid) return;\n    console.log(this.form.value);\n  }\n  constructor() {\n    this.hide = true;\n    this.formBuilder = inject(FormBuilder);\n    this.form = this.formBuilder.group({\n      email: this.formBuilder.control('', {\n        validators: [Validators.required, Validators.email],\n        nonNullable: true\n      }),\n      password: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      })\n    });\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function NewLoginComponent_Factory(t) {\n    return new (t || NewLoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewLoginComponent,\n    selectors: [[\"loginForm\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function NewLoginComponent_Template(rf, ctx) {},\n    dependencies: [MatFormFieldModule, MatInputModule, MatIconModule, MatButtonModule, ReactiveFormsModule, RouterModule, CommonModule]\n  });\n}","map":{"version":3,"names":["inject","CommonModule","FormBuilder","ReactiveFormsModule","Validators","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","RouterModule","NewLoginComponent","logIn","form","invalid","console","log","value","constructor","hide","formBuilder","group","email","control","validators","required","nonNullable","password","ngOnInit","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","template","NewLoginComponent_Template","rf","ctx","dependencies"],"sources":["C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\auth\\form-login\\form-login.ts"],"sourcesContent":["import { Component, inject, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { Router, RouterModule } from '@angular/router';\r\n\r\ninterface interfaceLoginForm{\r\n  email: FormControl<string>;\r\n  password: FormControl<string>;\r\n}\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports:[\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    CommonModule,\r\n  ],\r\n  selector: 'loginForm',\r\n  template: ``,\r\n  styles: [``]\r\n})\r\n\r\nexport default class NewLoginComponent implements OnInit {\r\n  hide = true;\r\n\r\n  formBuilder = inject(FormBuilder);\r\n\r\n  form: FormGroup<interfaceLoginForm> = this.formBuilder.group({\r\n    email: this.formBuilder.control('', {\r\n      validators: [Validators.required, Validators.email],\r\n      nonNullable: true,\r\n    }),\r\n    password: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n  });\r\n\r\n  logIn(): void {\r\n    if (this.form.invalid) return;\r\n    console.log(this.form.value)\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n}"],"mappings":"AAAA,SAAoBA,MAAM,QAAgB,eAAe;AACzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SACEC,WAAW,EAGXC,mBAAmB,EACnBC,UAAU,QACL,gBAAgB;AAEvB,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAAiBC,YAAY,QAAQ,iBAAiB;;AAuBtD,eAAc,MAAOC,iBAAiB;EAgBpCC,KAAKA,CAAA;IACH,IAAI,IAAI,CAACC,IAAI,CAACC,OAAO,EAAE;IACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,IAAI,CAACI,KAAK,CAAC;EAC9B;EAEAC,YAAA;IApBA,KAAAC,IAAI,GAAG,IAAI;IAEX,KAAAC,WAAW,GAAGnB,MAAM,CAACE,WAAW,CAAC;IAEjC,KAAAU,IAAI,GAAkC,IAAI,CAACO,WAAW,CAACC,KAAK,CAAC;MAC3DC,KAAK,EAAE,IAAI,CAACF,WAAW,CAACG,OAAO,CAAC,EAAE,EAAE;QAClCC,UAAU,EAAE,CAACnB,UAAU,CAACoB,QAAQ,EAAEpB,UAAU,CAACiB,KAAK,CAAC;QACnDI,WAAW,EAAE;OACd,CAAC;MACFC,QAAQ,EAAE,IAAI,CAACP,WAAW,CAACG,OAAO,CAAC,EAAE,EAAE;QACrCC,UAAU,EAAEnB,UAAU,CAACoB,QAAQ;QAC/BC,WAAW,EAAE;OACd;KACF,CAAC;EAOc;EAEhBE,QAAQA,CAAA,GAAK;EAAC,QAAAC,CAAA,G;qBAvBKlB,iBAAiB;EAAA;EAAA,QAAAmB,EAAA,G;UAAjBnB,iBAAiB;IAAAoB,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAAC,YAAA,GAblCpC,kBAAkB,EAClBC,cAAc,EACdC,aAAa,EACbC,eAAe,EACfL,mBAAmB,EACnBM,YAAY,EACZR,YAAY;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}