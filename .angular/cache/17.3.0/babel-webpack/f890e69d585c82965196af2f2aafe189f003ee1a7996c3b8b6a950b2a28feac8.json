{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/router\";\nfunction NewSignUpComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const messsage_r1 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(messsage_r1);\n  }\n}\nexport default class NewSignUpComponent {\n  constructor() {\n    this.hide = true;\n    this.formBuilder = inject(FormBuilder);\n    this.formularioHTML = this.formBuilder.group({\n      names: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      }),\n      lastName: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      }),\n      email: this.formBuilder.control('', {\n        validators: [Validators.required, Validators.email],\n        nonNullable: true\n      }),\n      password: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      })\n    });\n  }\n  signUp() {\n    if (this.formularioHTML.invalid) return;\n    console.log(this.formularioHTML.value);\n  }\n  static #_ = this.ɵfac = function NewSignUpComponent_Factory(t) {\n    return new (t || NewSignUpComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewSignUpComponent,\n    selectors: [[\"signupForm\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 49,\n    vars: 6,\n    consts: [[1, \"form\"], [1, \"form__container\"], [3, \"ngSubmit\", \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"names\"], [\"matInput\", \"\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-flat-button\", \"\", \"color\", \"accent\", \"type\", \"submit\"], [1, \"small-text\", \"providers\"], [1, \"small-text\", \"log-in-redirect\"], [\"routerLink\", \"/auth/log-in\"]],\n    template: function NewSignUpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Registro\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function NewSignUpComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.signUp();\n        });\n        i0.ɵɵelementStart(5, \"div\")(6, \"mat-form-field\")(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Nombres\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementStart(10, \"mat-error\");\n        i0.ɵɵtext(11, \"Este campo es obligatorio\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\")(13, \"mat-form-field\")(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Apellidos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 4);\n        i0.ɵɵelementStart(17, \"mat-error\");\n        i0.ɵɵtext(18, \"Este campo es obligatorio\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\")(20, \"mat-form-field\")(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 5);\n        i0.ɵɵtemplate(24, NewSignUpComponent_mat_error_24_Template, 2, 1, \"mat-error\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\")(26, \"mat-form-field\")(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Enter your password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 7);\n        i0.ɵɵelementStart(30, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function NewSignUpComponent_Template_button_click_30_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(31, \"mat-icon\");\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"mat-error\");\n        i0.ɵɵtext(34, \"Este campo es obligatorio\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\")(36, \"button\", 9);\n        i0.ɵɵtext(37, \"Sign up\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(38, \"hr\");\n        i0.ɵɵelementStart(39, \"span\", 10);\n        i0.ɵɵtext(40, \"Have Google or GitHub?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"span\", 11);\n        i0.ɵɵtext(42, \"Already have an account? \");\n        i0.ɵɵelementStart(43, \"a\", 12);\n        i0.ɵɵtext(44, \"Log in\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(45, \"h1\");\n        i0.ɵɵtext(46, \"HOLA \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"p\");\n        i0.ɵɵtext(48, \"pablo\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.formularioHTML);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngIf\", ctx.isEmailValid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance();\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n      }\n    },\n    dependencies: [MatFormFieldModule, i1.MatFormField, i1.MatLabel, i1.MatError, i1.MatSuffix, MatInputModule, i2.MatInput, MatIconModule, i3.MatIcon, MatButtonModule, i4.MatButton, i4.MatIconButton, ReactiveFormsModule, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, RouterModule, i6.RouterLink]\n  });\n}","map":{"version":3,"names":["inject","FormBuilder","ReactiveFormsModule","Validators","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","RouterModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","messsage_r1","NewSignUpComponent","constructor","hide","formBuilder","formularioHTML","group","names","control","validators","required","nonNullable","lastName","email","password","signUp","invalid","console","log","value","_","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NewSignUpComponent_Template","rf","ctx","ɵɵlistener","NewSignUpComponent_Template_form_ngSubmit_4_listener","ɵɵelement","ɵɵtemplate","NewSignUpComponent_mat_error_24_Template","NewSignUpComponent_Template_button_click_30_listener","ɵɵproperty","isEmailValid","i1","MatFormField","MatLabel","MatError","MatSuffix","i2","MatInput","i3","MatIcon","i4","MatButton","MatIconButton","i5","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i6","RouterLink"],"sources":["C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\auth\\form-signup\\form-signup.component.ts","C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\auth\\form-signup\\form-signup.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\r\nimport { NgIf } from '@angular/common';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { Router, RouterModule } from '@angular/router';\r\n\r\n//import { AuthService, Credential } from '../../../core/services/auth.service';\r\n// import { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\n// import { ButtonProviders } from '../components/button-providers/button-providers.component';\r\n\r\n\r\ninterface interfazSignUpForm {\r\n  names: FormControl<string>;\r\n  lastName: FormControl<string>;\r\n  email: FormControl<string>;\r\n  password: FormControl<string>;\r\n}\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports:[\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  selector: 'signupForm',\r\n  templateUrl: './form-signup.component.html',\r\n  styles: [``]\r\n})\r\n\r\nexport default class NewSignUpComponent{\r\n  hide = true;\r\n\r\n  formBuilder = inject(FormBuilder);\r\n\r\n  formularioHTML: FormGroup<interfazSignUpForm> = this.formBuilder.group({\r\n    names: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n    lastName: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n    email: this.formBuilder.control('', {\r\n      validators: [Validators.required, Validators.email],\r\n      nonNullable: true,\r\n    }),\r\n    password: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n  });\r\n\r\n  signUp(): void {\r\n    if (this.formularioHTML.invalid) return;\r\n    console.log(this.formularioHTML.value)\r\n  }\r\n\r\n  //constructor() { }\r\n\r\n  //ngOnInit() { }\r\n}","<div class=\"form\">\r\n    <div class=\"form__container\">\r\n      <h1>Registro</h1>\r\n      <form [formGroup]=\"formularioHTML\" (ngSubmit)=\"signUp()\">\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Nombres</mat-label>\r\n            <input matInput formControlName=\"names\" />\r\n            <mat-error>Este campo es obligatorio</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Apellidos</mat-label>\r\n            <input matInput formControlName=\"lastName\" />\r\n            <mat-error>Este campo es obligatorio</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" />\r\n            <mat-error *ngIf=\"isEmailValid as messsage\">{{ messsage }}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Enter your password</mat-label>\r\n            <input\r\n              matInput\r\n              [type]=\"hide ? 'password' : 'text'\"\r\n              formControlName=\"password\"\r\n            />\r\n            <button\r\n              mat-icon-button\r\n              matSuffix\r\n              (click)=\"hide = !hide\"\r\n              [attr.aria-label]=\"'Hide password'\"\r\n              [attr.aria-pressed]=\"hide\"\r\n            >\r\n              <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n            </button>\r\n            <mat-error>Este campo es obligatorio</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <div>\r\n          <button mat-flat-button color=\"accent\" type=\"submit\">Sign up</button>\r\n        </div>\r\n      </form>\r\n      <hr />\r\n      <span class=\"small-text providers\">Have Google or GitHub?</span>\r\n      <!-- <app-button-providers /> -->\r\n      <span class=\"small-text log-in-redirect\"\r\n        >Already have an account? <a routerLink=\"/auth/log-in\">Log in</a></span\r\n      >\r\n    </div>\r\n  </div>\r\n  \r\n\r\n  <h1>HOLA </h1>\r\n  <p>pablo</p>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}