{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/ProAsix/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// import { Component, inject } from '@angular/core';\n// import { CommonModule, NgIf } from '@angular/common';\n// import {\n//   FormBuilder,\n//   FormControl,\n//   FormGroup,\n//   ReactiveFormsModule,\n//   Validators,\n// } from '@angular/forms';\n// import { MatFormFieldModule } from '@angular/material/form-field';\n// import { MatInputModule } from '@angular/material/input';\n// import { MatIconModule } from '@angular/material/icon';\n// import { MatButtonModule } from '@angular/material/button';\n// import { Router, RouterModule } from '@angular/router';\n// import { AuthService, Credential } from 'src/app/services/auth/firebase/auth.service';\n// // comenado\n// // import { ButtonProviders } from '../../services/auth/componentes/button-providers.component'\n// //import { AuthService, Credential } from '../../../core/services/auth.service';\n// // import { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\n// interface interfazSignUpForm {\n//   names: FormControl<string>;\n//   lastName: FormControl<string>;\n//   email: FormControl<string>;\n//   password: FormControl<string>;\n// }\n// @Component({\n//   standalone: true,\n//   imports:[\n//     MatFormFieldModule,\n//     MatInputModule,\n//     MatIconModule,\n//     MatButtonModule,\n//     ReactiveFormsModule,\n//     RouterModule,\n//     CommonModule,\n//     NgIf,\n//     // comentado\n//     // ButtonProviders,\n//     // MatSnackBar,\n//     // MatSnackBarModule,\n//   ],\n//   selector: 'signupForm',\n//   templateUrl: './form-signup.component.html',\n//   styleUrls: ['./form-signup.component.css']\n// })\n// export default class NewSignUpComponent{\n//   hide = true;\n//   formBuilder = inject(FormBuilder);\n//   formularioHTML: FormGroup<interfazSignUpForm> = this.formBuilder.group({\n//     names: this.formBuilder.control('', {\n//       validators: Validators.required,\n//       nonNullable: true,\n//     }),\n//     lastName: this.formBuilder.control('', {\n//       validators: Validators.required,\n//       nonNullable: true,\n//     }),\n//     email: this.formBuilder.control('', {\n//       validators: [Validators.required, Validators.email],\n//       nonNullable: true,\n//     }),\n//     password: this.formBuilder.control('', {\n//       validators: Validators.required,\n//       nonNullable: true,\n//     }),\n//   });\n//   private servicioAuth = inject(AuthService)\n//   private _router = inject(Router);\n//   // private _snackBar = inject(MatSnackBar);\n//   async signUp(): Promise<void> {\n//     if (this.formularioHTML.invalid) return;\n//     const credential : Credential = {\n//       // || por si tiene un valor indefinido \n//       email: this.formularioHTML.value.email || '',\n//       password: this.formularioHTML.value.password || '' ,\n//     };\n//     try {\n//       await this.servicioAuth.signInWithEmailAndPassword(credential);\n//       this._router.navigateByUrl('/');\n//     } catch (error) {\n//       console.error(error);\n//     }\n//     console.log(this.formularioHTML.value)\n//   }\n//   get isEmailValid(): string | boolean {\n//     const control = this.formularioHTML.get('email');\n//     const isInvalid = control?.invalid && control.touched;\n//     if (isInvalid) {\n//       return control.hasError('required')\n//         ? 'Este campo es obligatorio'\n//         : 'Introduce un formato de correo valido';\n//     }\n//     return false;\n//   }\n//   // comentado\n//   // openSnackBar() {\n//   //   return this._snackBar.open('Succesfully Sign up ðŸ˜€', 'Close', {\n//   //     duration: 2500,\n//   //     verticalPosition: 'top',\n//   //     horizontalPosition: 'end',\n//   //   });\n//   // }\n//   constructor() { }\n//   ngOnInit() { }\n// }\n// --------------------------------------------------------------------------------\nimport { inject } from '@angular/core';\nimport { CommonModule, NgIf } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Router, RouterModule } from '@angular/router';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\n// import { ButtonProviders } from '../components/button-providers/button-providers.component';\nimport { ButtonProviders } from '../../services/auth/componentes/button-providers.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/router\";\nfunction SignUpComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"mat-error\");\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const messsage_r1 = ctx.ngIf;\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate(messsage_r1);\n  }\n}\nexport default class SignUpComponent {\n  constructor() {\n    this.hide = true;\n    this.formBuilder = inject(FormBuilder);\n    this.formularioHTML = this.formBuilder.group({\n      names: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      }),\n      lastName: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      }),\n      email: this.formBuilder.control('', {\n        validators: [Validators.required, Validators.email],\n        nonNullable: true\n      }),\n      password: this.formBuilder.control('', {\n        validators: Validators.required,\n        nonNullable: true\n      })\n    });\n    // auth da problemas\n    // private authSrv = inject(AuthService);\n    this._router = inject(Router);\n    this._snackBar = inject(MatSnackBar);\n  }\n  get isEmailValid() {\n    const control = this.formularioHTML.get('email');\n    const isInvalid = control?.invalid && control.touched;\n    if (isInvalid) {\n      return control.hasError('required') ? 'This field is required' : 'Enter a valid email';\n    }\n    return false;\n  }\n  signUp() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.formularioHTML.invalid) return;\n      const credential = {\n        email: _this.formularioHTML.value.email || '',\n        password: _this.formularioHTML.value.password || ''\n      };\n      // try {\n      //   await this.authSrv.signUpWithEmailAndPassword(credential);\n      //   const snackBarRef = this.openSnackBar();\n      //   snackBarRef.afterDismissed().subscribe(() => {\n      //     this._router.navigateByUrl('/');\n      //   });\n      // } catch (error) {\n      //   console.error(error);\n      // }\n    })();\n  }\n  static #_ = this.Éµfac = function SignUpComponent_Factory(t) {\n    return new (t || SignUpComponent)();\n  };\n  static #_2 = this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: SignUpComponent,\n    selectors: [[\"app-sign-up\"]],\n    standalone: true,\n    features: [i0.ÉµÉµProvidersFeature([]), i0.ÉµÉµStandaloneFeature],\n    decls: 50,\n    vars: 6,\n    consts: [[1, \"form\"], [1, \"form__container\"], [3, \"ngSubmit\", \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"names\"], [\"matInput\", \"\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-flat-button\", \"\", \"color\", \"accent\", \"type\", \"submit\"], [1, \"small-text\", \"providers\"], [1, \"small-text\", \"log-in-redirect\"], [\"routerLink\", \"/auth/log-in\"]],\n    template: function SignUpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ÉµÉµtext(3, \"Registro\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(4, \"form\", 2);\n        i0.ÉµÉµlistener(\"ngSubmit\", function SignUpComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.signUp();\n        });\n        i0.ÉµÉµelementStart(5, \"div\")(6, \"mat-form-field\")(7, \"mat-label\");\n        i0.ÉµÉµtext(8, \"Nombres\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(9, \"input\", 3);\n        i0.ÉµÉµelementStart(10, \"mat-error\");\n        i0.ÉµÉµtext(11, \"Este campo es obligatorio\");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(12, \"div\")(13, \"mat-form-field\")(14, \"mat-label\");\n        i0.ÉµÉµtext(15, \"Apellidos\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(16, \"input\", 4);\n        i0.ÉµÉµelementStart(17, \"mat-error\");\n        i0.ÉµÉµtext(18, \"Este campo es obligatorio\");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(19, \"div\")(20, \"mat-form-field\")(21, \"mat-label\");\n        i0.ÉµÉµtext(22, \"Email\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(23, \"input\", 5);\n        i0.ÉµÉµtemplate(24, SignUpComponent_mat_error_24_Template, 2, 1, \"mat-error\", 6);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(25, \"div\")(26, \"mat-form-field\")(27, \"mat-label\");\n        i0.ÉµÉµtext(28, \"Introduce tu contrase\\u00F1a\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(29, \"input\", 7);\n        i0.ÉµÉµelementStart(30, \"button\", 8);\n        i0.ÉµÉµlistener(\"click\", function SignUpComponent_Template_button_click_30_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ÉµÉµelementStart(31, \"mat-icon\");\n        i0.ÉµÉµtext(32);\n        i0.ÉµÉµelementEnd()();\n        i0.ÉµÉµelementStart(33, \"mat-error\");\n        i0.ÉµÉµtext(34, \"Este campo es obligatorio\");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelementStart(35, \"div\")(36, \"button\", 9);\n        i0.ÉµÉµtext(37, \"Sign up\");\n        i0.ÉµÉµelementEnd()()();\n        i0.ÉµÉµelement(38, \"hr\");\n        i0.ÉµÉµelementStart(39, \"span\", 10);\n        i0.ÉµÉµtext(40, \"Have Google or GitHub?\");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(41, \"app-button-providers\");\n        i0.ÉµÉµelementStart(42, \"span\", 11);\n        i0.ÉµÉµtext(43, \"Ya est\\u00E1s registrado? \");\n        i0.ÉµÉµelementStart(44, \"a\", 12);\n        i0.ÉµÉµtext(45, \"Iniciar Sesi\\u00F3n\");\n        i0.ÉµÉµelementEnd()()()();\n        i0.ÉµÉµelementStart(46, \"h1\");\n        i0.ÉµÉµtext(47, \"HOLA \");\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(48, \"p\");\n        i0.ÉµÉµtext(49, \"pablo\");\n        i0.ÉµÉµelementEnd();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(4);\n        i0.ÉµÉµproperty(\"formGroup\", ctx.formularioHTML);\n        i0.ÉµÉµadvance(20);\n        i0.ÉµÉµproperty(\"ngIf\", ctx.isEmailValid);\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ÉµÉµadvance();\n        i0.ÉµÉµattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n      }\n    },\n    dependencies: [MatFormFieldModule, i1.MatFormField, i1.MatLabel, i1.MatError, i1.MatSuffix, MatInputModule, i2.MatInput, MatIconModule, i3.MatIcon, MatButtonModule, i4.MatButton, i4.MatIconButton, ReactiveFormsModule, i5.ÉµNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, RouterModule, i6.RouterLink, NgIf, MatSnackBarModule, ButtonProviders, CommonModule],\n    styles: [\"[_ngcontent-%COMP%]:root {\\n    --background-color: #2e3b4e;\\n    --container-background: #3b4a5e;\\n    --primary-color: #1c2a3a;\\n    --primary-light-color: #455a64;\\n    --primary-dark-color: #0d1b2a;\\n    --text-color: #ffffff;\\n    --error-color: #ff6b6b;\\n    --link-color: #4fc3f7;\\n    --link-hover-color: #0288d1;\\n  }\\n  \\n  \\n\\n  body[_ngcontent-%COMP%], html[_ngcontent-%COMP%] {\\n    height: 100%;\\n    margin: 0;\\n    font-family: 'Roboto', sans-serif;\\n    background-color: var(--background-color);\\n  }\\n  \\n  .form[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    padding: 1rem;\\n  }\\n  \\n  .form__container[_ngcontent-%COMP%] {\\n    background: var(--container-background);\\n    padding: 2rem;\\n    border-radius: 10px;\\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\\n    width: 100%;\\n    max-width: 450px;\\n    box-sizing: border-box;\\n  }\\n  \\n  h1[_ngcontent-%COMP%] {\\n    margin-bottom: 2rem;\\n    font-size: 28px;\\n    color: var(--text-color);\\n    text-align: center;\\n    font-weight: 500;\\n  }\\n  \\n  mat-form-field[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin-bottom: 1.5rem;\\n  }\\n  \\n  mat-form-field[_ngcontent-%COMP%]   .mat-form-field-wrapper[_ngcontent-%COMP%] {\\n    padding-bottom: 0.5rem;\\n  }\\n  \\n  input[matInput][_ngcontent-%COMP%] {\\n    padding: 0.5rem;\\n    border-radius: 4px;\\n    border: 1px solid var(--primary-light-color);\\n    background-color: var(--primary-dark-color);\\n    color: var(--text-color);\\n  }\\n  \\n  mat-error[_ngcontent-%COMP%] {\\n    color: var(--error-color);\\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 0.75rem;\\n    background-color: var(--primary-color);\\n    color: var(--text-color);\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n    font-size: 16px;\\n    font-weight: 600;\\n    transition: background-color 0.3s ease;\\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n    background-color: var(--primary-light-color);\\n  }\\n  \\n  .small-text[_ngcontent-%COMP%] {\\n    display: block;\\n    text-align: center;\\n    margin-top: 1rem;\\n    font-size: 14px;\\n    color: var(--text-color);\\n  }\\n  \\n  .providers[_ngcontent-%COMP%], .log-in-redirect[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-top: 1rem;\\n    text-align: center;\\n    font-size: 14px;\\n    color: var(--text-color);\\n  }\\n  \\n  .log-in-redirect[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    color: var(--link-color);\\n    text-decoration: none;\\n    font-weight: 500;\\n  }\\n  \\n  .log-in-redirect[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n    text-decoration: underline;\\n    color: var(--link-hover-color);\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9mb3JtLXNpZ251cC9mb3JtLXNpZ251cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0lBQzNCLCtCQUErQjtJQUMvQix3QkFBd0I7SUFDeEIsOEJBQThCO0lBQzlCLDZCQUE2QjtJQUM3QixxQkFBcUI7SUFDckIsc0JBQXNCO0lBQ3RCLHFCQUFxQjtJQUNyQiwyQkFBMkI7RUFDN0I7O0VBRUEsc0NBQXNDO0VBQ3RDO0lBQ0UsWUFBWTtJQUNaLFNBQVM7SUFDVCxpQ0FBaUM7SUFDakMseUNBQXlDO0VBQzNDOztFQUVBO0lBQ0UsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGFBQWE7RUFDZjs7RUFFQTtJQUNFLHVDQUF1QztJQUN2QyxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHlDQUF5QztJQUN6QyxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2Ysd0JBQXdCO0lBQ3hCLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gscUJBQXFCO0VBQ3ZCOztFQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQiw0Q0FBNEM7SUFDNUMsMkNBQTJDO0lBQzNDLHdCQUF3QjtFQUMxQjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsc0NBQXNDO0lBQ3RDLHdCQUF3QjtJQUN4QixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLHNDQUFzQztFQUN4Qzs7RUFFQTtJQUNFLDRDQUE0QztFQUM5Qzs7RUFFQTtJQUNFLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZix3QkFBd0I7RUFDMUI7O0VBRUE7O0lBRUUsY0FBYztJQUNkLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLHdCQUF3QjtFQUMxQjs7RUFFQTtJQUNFLHdCQUF3QjtJQUN4QixxQkFBcUI7SUFDckIsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsMEJBQTBCO0lBQzFCLDhCQUE4QjtFQUNoQyIsInNvdXJjZXNDb250ZW50IjpbIjpyb290IHtcclxuICAgIC0tYmFja2dyb3VuZC1jb2xvcjogIzJlM2I0ZTtcclxuICAgIC0tY29udGFpbmVyLWJhY2tncm91bmQ6ICMzYjRhNWU7XHJcbiAgICAtLXByaW1hcnktY29sb3I6ICMxYzJhM2E7XHJcbiAgICAtLXByaW1hcnktbGlnaHQtY29sb3I6ICM0NTVhNjQ7XHJcbiAgICAtLXByaW1hcnktZGFyay1jb2xvcjogIzBkMWIyYTtcclxuICAgIC0tdGV4dC1jb2xvcjogI2ZmZmZmZjtcclxuICAgIC0tZXJyb3ItY29sb3I6ICNmZjZiNmI7XHJcbiAgICAtLWxpbmstY29sb3I6ICM0ZmMzZjc7XHJcbiAgICAtLWxpbmstaG92ZXItY29sb3I6ICMwMjg4ZDE7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIEVzdGlsbyBnZW5lcmFsIHBhcmEgZWwgZm9ybXVsYXJpbyAqL1xyXG4gIGJvZHksIGh0bWwge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1jb2xvcik7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm1fX2NvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb250YWluZXItYmFja2dyb3VuZCk7XHJcbiAgICBwYWRkaW5nOiAycmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgOHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICB9XHJcbiAgXHJcbiAgaDEge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxuICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgIGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgfVxyXG4gIFxyXG4gIG1hdC1mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xyXG4gIH1cclxuICBcclxuICBtYXQtZm9ybS1maWVsZCAubWF0LWZvcm0tZmllbGQtd3JhcHBlciB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMC41cmVtO1xyXG4gIH1cclxuICBcclxuICBpbnB1dFttYXRJbnB1dF0ge1xyXG4gICAgcGFkZGluZzogMC41cmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tcHJpbWFyeS1saWdodC1jb2xvcik7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWRhcmstY29sb3IpO1xyXG4gICAgY29sb3I6IHZhcigtLXRleHQtY29sb3IpO1xyXG4gIH1cclxuICBcclxuICBtYXQtZXJyb3Ige1xyXG4gICAgY29sb3I6IHZhcigtLWVycm9yLWNvbG9yKTtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwLjc1cmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1jb2xvcik7XHJcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktbGlnaHQtY29sb3IpO1xyXG4gIH1cclxuICBcclxuICAuc21hbGwtdGV4dCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XHJcbiAgfVxyXG4gIFxyXG4gIC5wcm92aWRlcnMsXHJcbiAgLmxvZy1pbi1yZWRpcmVjdCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi10b3A6IDFyZW07XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBjb2xvcjogdmFyKC0tdGV4dC1jb2xvcik7XHJcbiAgfVxyXG4gIFxyXG4gIC5sb2ctaW4tcmVkaXJlY3QgYSB7XHJcbiAgICBjb2xvcjogdmFyKC0tbGluay1jb2xvcik7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gIH1cclxuICBcclxuICAubG9nLWluLXJlZGlyZWN0IGE6aG92ZXIge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICBjb2xvcjogdmFyKC0tbGluay1ob3Zlci1jb2xvcik7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["inject","CommonModule","NgIf","FormBuilder","ReactiveFormsModule","Validators","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","Router","RouterModule","MatSnackBar","MatSnackBarModule","ButtonProviders","i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµadvance","ÉµÉµtextInterpolate","messsage_r1","SignUpComponent","constructor","hide","formBuilder","formularioHTML","group","names","control","validators","required","nonNullable","lastName","email","password","_router","_snackBar","isEmailValid","get","isInvalid","invalid","touched","hasError","signUp","_this","_asyncToGenerator","credential","value","_","_2","selectors","standalone","features","ÉµÉµProvidersFeature","ÉµÉµStandaloneFeature","decls","vars","consts","template","SignUpComponent_Template","rf","ctx","ÉµÉµlistener","SignUpComponent_Template_form_ngSubmit_4_listener","ÉµÉµelement","ÉµÉµtemplate","SignUpComponent_mat_error_24_Template","SignUpComponent_Template_button_click_30_listener","ÉµÉµproperty","i1","MatFormField","MatLabel","MatError","MatSuffix","i2","MatInput","i3","MatIcon","i4","MatButton","MatIconButton","i5","ÉµNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i6","RouterLink","styles"],"sources":["C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\auth\\form-signup\\form-signup.component.ts","C:\\Users\\ASUS\\Documents\\GitHub\\ProAsix\\src\\app\\auth\\form-signup\\form-signup.component.html"],"sourcesContent":["// import { Component, inject } from '@angular/core';\r\n// import { CommonModule, NgIf } from '@angular/common';\r\n// import {\r\n//   FormBuilder,\r\n//   FormControl,\r\n//   FormGroup,\r\n//   ReactiveFormsModule,\r\n//   Validators,\r\n// } from '@angular/forms';\r\n\r\n// import { MatFormFieldModule } from '@angular/material/form-field';\r\n// import { MatInputModule } from '@angular/material/input';\r\n// import { MatIconModule } from '@angular/material/icon';\r\n// import { MatButtonModule } from '@angular/material/button';\r\n// import { Router, RouterModule } from '@angular/router';\r\n\r\n// import { AuthService, Credential } from 'src/app/services/auth/firebase/auth.service';\r\n\r\n// // comenado\r\n// // import { ButtonProviders } from '../../services/auth/componentes/button-providers.component'\r\n\r\n// //import { AuthService, Credential } from '../../../core/services/auth.service';\r\n// // import { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\n// interface interfazSignUpForm {\r\n//   names: FormControl<string>;\r\n//   lastName: FormControl<string>;\r\n//   email: FormControl<string>;\r\n//   password: FormControl<string>;\r\n// }\r\n\r\n// @Component({\r\n//   standalone: true,\r\n//   imports:[\r\n//     MatFormFieldModule,\r\n//     MatInputModule,\r\n//     MatIconModule,\r\n//     MatButtonModule,\r\n//     ReactiveFormsModule,\r\n//     RouterModule,\r\n//     CommonModule,\r\n//     NgIf,\r\n\r\n//     // comentado\r\n//     // ButtonProviders,\r\n//     // MatSnackBar,\r\n//     // MatSnackBarModule,\r\n    \r\n//   ],\r\n//   selector: 'signupForm',\r\n//   templateUrl: './form-signup.component.html',\r\n//   styleUrls: ['./form-signup.component.css']\r\n// })\r\n\r\n// export default class NewSignUpComponent{\r\n//   hide = true;\r\n\r\n//   formBuilder = inject(FormBuilder);\r\n\r\n//   formularioHTML: FormGroup<interfazSignUpForm> = this.formBuilder.group({\r\n//     names: this.formBuilder.control('', {\r\n//       validators: Validators.required,\r\n//       nonNullable: true,\r\n//     }),\r\n//     lastName: this.formBuilder.control('', {\r\n//       validators: Validators.required,\r\n//       nonNullable: true,\r\n//     }),\r\n//     email: this.formBuilder.control('', {\r\n//       validators: [Validators.required, Validators.email],\r\n//       nonNullable: true,\r\n//     }),\r\n//     password: this.formBuilder.control('', {\r\n//       validators: Validators.required,\r\n//       nonNullable: true,\r\n//     }),\r\n//   });\r\n\r\n//   private servicioAuth = inject(AuthService)\r\n//   private _router = inject(Router);\r\n//   // private _snackBar = inject(MatSnackBar);\r\n\r\n//   async signUp(): Promise<void> {\r\n//     if (this.formularioHTML.invalid) return;\r\n\r\n//     const credential : Credential = {\r\n//       // || por si tiene un valor indefinido \r\n//       email: this.formularioHTML.value.email || '',\r\n//       password: this.formularioHTML.value.password || '' ,\r\n//     };\r\n\r\n//     try {\r\n//       await this.servicioAuth.signInWithEmailAndPassword(credential);\r\n//       this._router.navigateByUrl('/');\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n\r\n\r\n//     console.log(this.formularioHTML.value)\r\n//   }\r\n\r\n//   get isEmailValid(): string | boolean {\r\n//     const control = this.formularioHTML.get('email');\r\n\r\n//     const isInvalid = control?.invalid && control.touched;\r\n\r\n//     if (isInvalid) {\r\n//       return control.hasError('required')\r\n//         ? 'Este campo es obligatorio'\r\n//         : 'Introduce un formato de correo valido';\r\n//     }\r\n\r\n//     return false;\r\n//   }\r\n\r\n\r\n//   // comentado\r\n//   // openSnackBar() {\r\n//   //   return this._snackBar.open('Succesfully Sign up ðŸ˜€', 'Close', {\r\n//   //     duration: 2500,\r\n//   //     verticalPosition: 'top',\r\n//   //     horizontalPosition: 'end',\r\n//   //   });\r\n//   // }\r\n\r\n\r\n//   constructor() { }\r\n\r\n//   ngOnInit() { }\r\n// }\r\n\r\n// --------------------------------------------------------------------------------\r\n\r\n\r\nimport { Component, inject } from '@angular/core';\r\nimport { CommonModule, NgIf } from '@angular/common';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { Router, RouterModule } from '@angular/router';\r\n\r\n// import { AuthService, Credential } from '../../../core/services/auth.service';\r\nimport { AuthService, Credential } from 'src/app/services/auth/firebase/auth.service';\r\n\r\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\r\n// import { ButtonProviders } from '../components/button-providers/button-providers.component';\r\nimport { ButtonProviders } from '../../services/auth/componentes/button-providers.component'\r\n\r\n\r\ninterface SignUpForm {\r\n  names: FormControl<string>;\r\n  lastName: FormControl<string>;\r\n  email: FormControl<string>;\r\n  password: FormControl<string>;\r\n}\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    NgIf,\r\n    MatSnackBarModule,\r\n    ButtonProviders,\r\n    CommonModule\r\n  ],\r\n  selector: 'app-sign-up',\r\n  templateUrl: './form-signup.component.html',\r\n  providers: [],\r\n  styleUrls: ['./form-signup.component.css'],\r\n})\r\nexport default class SignUpComponent {\r\n  hide = true;\r\n\r\n  formBuilder = inject(FormBuilder);\r\n\r\n  formularioHTML: FormGroup<SignUpForm> = this.formBuilder.group({\r\n    names: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n    lastName: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n    email: this.formBuilder.control('', {\r\n      validators: [Validators.required, Validators.email],\r\n      nonNullable: true,\r\n    }),\r\n    password: this.formBuilder.control('', {\r\n      validators: Validators.required,\r\n      nonNullable: true,\r\n    }),\r\n  });\r\n\r\n  // auth da problemas\r\n  // private authSrv = inject(AuthService);\r\n  private _router = inject(Router);\r\n  private _snackBar = inject(MatSnackBar);\r\n\r\n  get isEmailValid(): string | boolean {\r\n    const control = this.formularioHTML.get('email');\r\n\r\n    const isInvalid = control?.invalid && control.touched;\r\n\r\n    if (isInvalid) {\r\n      return control.hasError('required')\r\n        ? 'This field is required'\r\n        : 'Enter a valid email';\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  async signUp(): Promise<void> {\r\n    if (this.formularioHTML.invalid) return;\r\n\r\n    const credential: Credential = {\r\n      email: this.formularioHTML.value.email || '',\r\n      password: this.formularioHTML.value.password || '',\r\n    };\r\n\r\n    // try {\r\n    //   await this.authSrv.signUpWithEmailAndPassword(credential);\r\n\r\n    //   const snackBarRef = this.openSnackBar();\r\n\r\n    //   snackBarRef.afterDismissed().subscribe(() => {\r\n    //     this._router.navigateByUrl('/');\r\n    //   });\r\n    // } catch (error) {\r\n    //   console.error(error);\r\n    // }\r\n  }\r\n\r\n  // openSnackBar() {\r\n  //   return this._snackBar.open('Succesfully Sign up ðŸ˜€', 'Close', {\r\n  //     duration: 2500,\r\n  //     verticalPosition: 'top',\r\n  //     horizontalPosition: 'end',\r\n  //   });\r\n  // }\r\n}\r\n","<div class=\"form\">\r\n    <div class=\"form__container\">\r\n      <h1>Registro</h1>\r\n      <form [formGroup]=\"formularioHTML\" (ngSubmit)=\"signUp()\">\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Nombres</mat-label>\r\n            <!-- asocia la etiqueta HTML con la interfaz en .ts -->\r\n            <input matInput formControlName=\"names\" />\r\n            <mat-error>Este campo es obligatorio</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Apellidos</mat-label>\r\n            <input matInput formControlName=\"lastName\" />\r\n            <mat-error>Este campo es obligatorio</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" />\r\n            <mat-error *ngIf=\"isEmailValid as messsage\">{{ messsage }}</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <mat-form-field>\r\n            <mat-label>Introduce tu contraseÃ±a</mat-label>\r\n            <input\r\n              matInput\r\n              [type]=\"hide ? 'password' : 'text'\"\r\n              formControlName=\"password\"\r\n            />\r\n            <button\r\n              mat-icon-button\r\n              matSuffix\r\n              (click)=\"hide = !hide\"\r\n              [attr.aria-label]=\"'Hide password'\"\r\n              [attr.aria-pressed]=\"hide\"\r\n            >\r\n              <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n            </button>\r\n            <mat-error>Este campo es obligatorio</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n  \r\n        <div>\r\n          <button mat-flat-button color=\"accent\" type=\"submit\">Sign up</button>\r\n        </div>\r\n      </form>\r\n      <hr />\r\n      <span class=\"small-text providers\">Have Google or GitHub?</span>\r\n      <app-button-providers />\r\n      <span class=\"small-text log-in-redirect\">Ya estÃ¡s registrado? <a routerLink=\"/auth/log-in\">Iniciar SesiÃ³n</a></span\r\n      >\r\n    </div>\r\n  </div>\r\n  \r\n\r\n  <h1>HOLA </h1>\r\n  <p>pablo</p>"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}