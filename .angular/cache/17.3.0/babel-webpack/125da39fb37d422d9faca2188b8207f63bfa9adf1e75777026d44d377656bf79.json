{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/spotify.service\";\nimport * as i2 from \"src/app/services/auth/login/login.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../shared/loading/loading.component\";\nimport * as i5 from \"../tarjetas/tarjetas.component\";\nfunction HomeComponent_app_loading_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading\");\n  }\n}\nexport class HomeComponent {\n  ngOnInit() {\n    this.serviciodeLogin.currentUserLoginOn.subscribe({\n      next: userLoginOn\n    });\n  }\n  constructor(spotify, serviciodeLogin) {\n    this.spotify = spotify;\n    // nueva constante\n    this.nuevasCanciones = [];\n    this.userLoginOn = false;\n    this.loading = true;\n    this.error = false;\n    this.spotify.getNewReleases().subscribe({\n      next: res => {\n        this.nuevasCanciones = res;\n        this.loading = false;\n      },\n      error: err => {\n        this.loading = false;\n        this.error = true;\n        Swal.fire({\n          icon: 'error',\n          title: 'ERROR',\n          text: err.error.error.message,\n          allowOutsideClick: false\n        });\n      }\n    });\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.LoginService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"items\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Ultimos Lanzamientos \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, HomeComponent_app_loading_2_Template, 1, 0, \"app-loading\", 0);\n        i0.ɵɵelement(3, \"app-tarjetas\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"items\", ctx.nuevasCanciones);\n      }\n    },\n    dependencies: [i3.NgIf, i4.LoadingComponent, i5.TarjetasComponent],\n    styles: [\"\\n\\nh5[_ngcontent-%COMP%]{\\n    font-family: 'Roboto', sans-serif;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdUNBQXVDO0FBQ3ZDO0lBQ0ksaUNBQWlDO0FBQ3JDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmOyAqL1xuaDV7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Swal","i0","ɵɵelement","HomeComponent","ngOnInit","serviciodeLogin","currentUserLoginOn","subscribe","next","userLoginOn","constructor","spotify","nuevasCanciones","loading","error","getNewReleases","res","err","fire","icon","title","text","message","allowOutsideClick","_","ɵɵdirectiveInject","i1","SpotifyService","i2","LoginService","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","HomeComponent_app_loading_2_Template","ɵɵadvance","ɵɵproperty"],"sources":["/home/jota/Documentos/GitHub/ProAsix/src/app/pages/home/home.component.ts","/home/jota/Documentos/GitHub/ProAsix/src/app/pages/home/home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport Swal from 'sweetalert2';\n//import { LoadingComponent } from '../shared/loading/loading.component';\nimport { LoginService } from 'src/app/services/auth/login/login.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  \n  ngOnInit(): void{\n    this.serviciodeLogin.currentUserLoginOn.subscribe({\n      next:(userLoginOn)\n    })\n\n  }\n\n  // nueva constante\n  nuevasCanciones : any[]=[];\n  loading?:boolean;\n  logMsg?:boolean;\n  error?:boolean;\n  userLoginOn:boolean=false;\n\n  constructor(private spotify:SpotifyService, serviciodeLogin:LoginService) { \n\n    this.loading = true;\n    this.error = false;\n\n    this.spotify.getNewReleases().subscribe({\n      next:(res)=>{\n        this.nuevasCanciones=res;\n        this.loading=false;\n      },\n      error:err=>{\n        this.loading = false;\n        this.error = true;\n\n        Swal.fire ({\n          icon:'error',\n          title:'ERROR',\n          text:err.error.error.message,\n          allowOutsideClick:false\n        })\n      }\n    })\n\n\n  }\n}\n","<!-- <div  class=\"card-columns mt-3 animate__animated animate__fadeIn\">\n\n    <div class=\"card puntero\" *ngFor=\"let cancion of nuevasCanciones\">\n      <img [src]=\"cancion.images | noimage\" class=\"card-img-top border-primary\" alt=\"...\">\n      \n      <div class=\"card-body\">\n        <h5 class=\"card-title text-center\">{{cancion.name}}</h5>\n        <p class=\"card-text\">\n            <span class=\"badge badge-pill badge-primary text-center\" *ngFor=\"let artist of cancion.artists\">{{artist.name}}</span>\n            <span class=\"badge badge-pill badge-secondary text-center\"> \n              Nº Tracks: <span clas=\"badge badge-light text-center\"> {{cancion.total_tracks}} </span>\n            </span>\n        </p>\n      </div>\n    </div>\n\n</div>    -->\n\n<!-- NUESVASCANCIONES EXISTEN EN COMPONENT.TS -->\n<p>Ultimos Lanzamientos </p>\n<app-loading *ngIf=\"loading\"></app-loading>\n<app-tarjetas [items]=\"nuevasCanciones\">  </app-tarjetas>"],"mappings":"AAEA,OAAOA,IAAI,MAAM,aAAa;;;;;;;;;ICkB9BC,EAAA,CAAAC,SAAA,kBAA2C;;;ADT3C,OAAM,MAAOC,aAAa;EAExBC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,CAACC,kBAAkB,CAACC,SAAS,CAAC;MAChDC,IAAI,EAAEC;KACP,CAAC;EAEJ;EASAC,YAAoBC,OAAsB,EAAEN,eAA4B;IAApD,KAAAM,OAAO,GAAPA,OAAO;IAP3B;IACA,KAAAC,eAAe,GAAS,EAAE;IAI1B,KAAAH,WAAW,GAAS,KAAK;IAIvB,IAAI,CAACI,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,KAAK,GAAG,KAAK;IAElB,IAAI,CAACH,OAAO,CAACI,cAAc,EAAE,CAACR,SAAS,CAAC;MACtCC,IAAI,EAAEQ,GAAG,IAAG;QACV,IAAI,CAACJ,eAAe,GAACI,GAAG;QACxB,IAAI,CAACH,OAAO,GAAC,KAAK;MACpB,CAAC;MACDC,KAAK,EAACG,GAAG,IAAE;QACT,IAAI,CAACJ,OAAO,GAAG,KAAK;QACpB,IAAI,CAACC,KAAK,GAAG,IAAI;QAEjBd,IAAI,CAACkB,IAAI,CAAE;UACTC,IAAI,EAAC,OAAO;UACZC,KAAK,EAAC,OAAO;UACbC,IAAI,EAACJ,GAAG,CAACH,KAAK,CAACA,KAAK,CAACQ,OAAO;UAC5BC,iBAAiB,EAAC;SACnB,CAAC;MACJ;KACD,CAAC;EAGJ;EAAC,QAAAC,CAAA,G;qBAxCUrB,aAAa,EAAAF,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA1B,EAAA,CAAAwB,iBAAA,CAAAG,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb3B,aAAa;IAAA4B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCQ1BpC,EAAA,CAAAsC,cAAA,QAAG;QAAAtC,EAAA,CAAAuC,MAAA,4BAAqB;QAAAvC,EAAA,CAAAwC,YAAA,EAAI;QAC5BxC,EAAA,CAAAyC,UAAA,IAAAC,oCAAA,yBAA6B;QAC7B1C,EAAA,CAAAC,SAAA,sBAAyD;;;QAD3CD,EAAA,CAAA2C,SAAA,GAAa;QAAb3C,EAAA,CAAA4C,UAAA,SAAAP,GAAA,CAAAzB,OAAA,CAAa;QACbZ,EAAA,CAAA2C,SAAA,EAAyB;QAAzB3C,EAAA,CAAA4C,UAAA,UAAAP,GAAA,CAAA1B,eAAA,CAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}