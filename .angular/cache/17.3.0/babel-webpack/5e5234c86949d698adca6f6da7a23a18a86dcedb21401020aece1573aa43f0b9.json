{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/spotify.service\";\nimport * as i2 from \"src/app/services/auth/login/login.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../shared/loading/loading.component\";\nimport * as i5 from \"../tarjetas/tarjetas.component\";\nfunction HomeComponent_app_loading_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading\");\n  }\n}\nexport class HomeComponent {\n  constructor(spotify, loginService) {\n    this.spotify = spotify;\n    this.loginService = loginService;\n    this.nuevasCanciones = [];\n    this.loading = true;\n    this.error = false;\n    this.userLoginOn = false;\n  }\n  ngOnInit() {\n    this.loginService.currentUserLoginOn.subscribe(userLoginOn => {\n      this.userLoginOn = userLoginOn;\n    });\n    this.spotify.getNewReleases().subscribe({\n      next: res => {\n        this.nuevasCanciones = res;\n        this.loading = false;\n      },\n      error: err => {\n        this.loading = false;\n        this.error = true;\n        console.error('Error al obtener nuevas canciones:', err);\n        Swal.fire({\n          icon: 'error',\n          title: 'ERROR',\n          text: err.error.error.message,\n          allowOutsideClick: false\n        });\n      }\n    });\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService), i0.ɵɵdirectiveInject(i2.LoginService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"items\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Ultimos Lanzamientos \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, HomeComponent_app_loading_2_Template, 1, 0, \"app-loading\", 0);\n        i0.ɵɵelement(3, \"app-tarjetas\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"items\", ctx.nuevasCanciones);\n      }\n    },\n    dependencies: [i3.NgIf, i4.LoadingComponent, i5.TarjetasComponent],\n    styles: [\"\\n\\nh5[_ngcontent-%COMP%]{\\n    font-family: 'Roboto', sans-serif;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdUNBQXVDO0FBQ3ZDO0lBQ0ksaUNBQWlDO0FBQ3JDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmOyAqL1xuaDV7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Swal","i0","ɵɵelement","HomeComponent","constructor","spotify","loginService","nuevasCanciones","loading","error","userLoginOn","ngOnInit","currentUserLoginOn","subscribe","getNewReleases","next","res","err","console","fire","icon","title","text","message","allowOutsideClick","_","ɵɵdirectiveInject","i1","SpotifyService","i2","LoginService","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","HomeComponent_app_loading_2_Template","ɵɵadvance","ɵɵproperty"],"sources":["/home/jota/Documentos/GitHub/ProAsix/src/app/pages/home/home.component.ts","/home/jota/Documentos/GitHub/ProAsix/src/app/pages/home/home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport Swal from 'sweetalert2';\nimport { LoginService } from 'src/app/services/auth/login/login.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  \n  nuevasCanciones: any[] = [];\n  loading: boolean = true;\n  error: boolean = false;\n  userLoginOn: boolean = false;\n\n  constructor(private spotify: SpotifyService, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.loginService.currentUserLoginOn.subscribe((userLoginOn: boolean) => {\n      this.userLoginOn = userLoginOn;\n    });\n\n    this.spotify.getNewReleases().subscribe({\n      next: (res) => {\n        this.nuevasCanciones = res;\n        this.loading = false;\n      },\n      error: (err) => {\n        this.loading = false;\n        this.error = true;\n\n        console.error('Error al obtener nuevas canciones:', err);\n\n        Swal.fire({\n          icon: 'error',\n          title: 'ERROR',\n          text: err.error.error.message,\n          allowOutsideClick: false\n        });\n      }\n    });\n  }\n}\n","<!-- <div  class=\"card-columns mt-3 animate__animated animate__fadeIn\">\n\n    <div class=\"card puntero\" *ngFor=\"let cancion of nuevasCanciones\">\n      <img [src]=\"cancion.images | noimage\" class=\"card-img-top border-primary\" alt=\"...\">\n      \n      <div class=\"card-body\">\n        <h5 class=\"card-title text-center\">{{cancion.name}}</h5>\n        <p class=\"card-text\">\n            <span class=\"badge badge-pill badge-primary text-center\" *ngFor=\"let artist of cancion.artists\">{{artist.name}}</span>\n            <span class=\"badge badge-pill badge-secondary text-center\"> \n              Nº Tracks: <span clas=\"badge badge-light text-center\"> {{cancion.total_tracks}} </span>\n            </span>\n        </p>\n      </div>\n    </div>\n\n</div>    -->\n\n<!-- NUESVASCANCIONES EXISTEN EN COMPONENT.TS -->\n<p>Ultimos Lanzamientos </p>\n<app-loading *ngIf=\"loading\"></app-loading>\n<app-tarjetas [items]=\"nuevasCanciones\">  </app-tarjetas>"],"mappings":"AAEA,OAAOA,IAAI,MAAM,aAAa;;;;;;;;;ICkB9BC,EAAA,CAAAC,SAAA,kBAA2C;;;ADV3C,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,OAAuB,EAAUC,YAA0B;IAA3D,KAAAD,OAAO,GAAPA,OAAO;IAA0B,KAAAC,YAAY,GAAZA,YAAY;IALjE,KAAAC,eAAe,GAAU,EAAE;IAC3B,KAAAC,OAAO,GAAY,IAAI;IACvB,KAAAC,KAAK,GAAY,KAAK;IACtB,KAAAC,WAAW,GAAY,KAAK;EAEuD;EAEnFC,QAAQA,CAAA;IACN,IAAI,CAACL,YAAY,CAACM,kBAAkB,CAACC,SAAS,CAAEH,WAAoB,IAAI;MACtE,IAAI,CAACA,WAAW,GAAGA,WAAW;IAChC,CAAC,CAAC;IAEF,IAAI,CAACL,OAAO,CAACS,cAAc,EAAE,CAACD,SAAS,CAAC;MACtCE,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACT,eAAe,GAAGS,GAAG;QAC1B,IAAI,CAACR,OAAO,GAAG,KAAK;MACtB,CAAC;MACDC,KAAK,EAAGQ,GAAG,IAAI;QACb,IAAI,CAACT,OAAO,GAAG,KAAK;QACpB,IAAI,CAACC,KAAK,GAAG,IAAI;QAEjBS,OAAO,CAACT,KAAK,CAAC,oCAAoC,EAAEQ,GAAG,CAAC;QAExDjB,IAAI,CAACmB,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,OAAO;UACdC,IAAI,EAAEL,GAAG,CAACR,KAAK,CAACA,KAAK,CAACc,OAAO;UAC7BC,iBAAiB,EAAE;SACpB,CAAC;MACJ;KACD,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAjCUtB,aAAa,EAAAF,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA3B,EAAA,CAAAyB,iBAAA,CAAAG,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb5B,aAAa;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCS1BrC,EAAA,CAAAuC,cAAA,QAAG;QAAAvC,EAAA,CAAAwC,MAAA,4BAAqB;QAAAxC,EAAA,CAAAyC,YAAA,EAAI;QAC5BzC,EAAA,CAAA0C,UAAA,IAAAC,oCAAA,yBAA6B;QAC7B3C,EAAA,CAAAC,SAAA,sBAAyD;;;QAD3CD,EAAA,CAAA4C,SAAA,GAAa;QAAb5C,EAAA,CAAA6C,UAAA,SAAAP,GAAA,CAAA/B,OAAA,CAAa;QACbP,EAAA,CAAA4C,SAAA,EAAyB;QAAzB5C,EAAA,CAAA6C,UAAA,UAAAP,GAAA,CAAAhC,eAAA,CAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}