{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ASUS/Documents/GitHub/ProAsix/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject } from '@angular/core';\nimport { Auth, authState } from '@angular/fire/auth';\nimport { GithubAuthProvider, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      // constructor(private auth:AngularFireAuth){ }\n      //inyeccion, doc firebase\n      this.auth = inject(Auth);\n      this.authState$ = authState(this.auth);\n    }\n    signUpWithEmailAndPassword(credencial) {\n      //necesita el auth (inyectado), email (string) y pass(string)\n      return createUserWithEmailAndPassword(this.auth, credencial.email, credencial.password);\n    }\n    logInWithEmailAndPassword(credencial) {\n      return signInWithEmailAndPassword(this.auth, credencial.email, credencial.password);\n    }\n    //CERRAR SESION\n    logOut() {\n      return this.auth.signOut();\n    }\n    // providers GOOGLE, GITHUB\n    signInWithGoogleProvider() {\n      const provider = new GoogleAuthProvider();\n      return this.callPopUp(provider);\n    }\n    signInWithGithubProvider() {\n      const provider = new GithubAuthProvider();\n      return this.callPopUp(provider);\n    }\n    callPopUp(provider) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const result = yield signInWithPopup(_this.auth, provider);\n          return result;\n        } catch (error) {\n          return error;\n        }\n      })();\n    }\n    getUserLogged() {\n      return this.authState$;\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}