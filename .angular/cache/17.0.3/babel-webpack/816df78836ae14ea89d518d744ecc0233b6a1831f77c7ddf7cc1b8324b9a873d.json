{"ast":null,"code":"//IMPORTAMOS LA CLASE\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\n//INYECTAMOS EN EL CONSTRUCTOR\nexport class LoginComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    //CREAMOS EL FORMULARIO\n    this.loginFormulario = this.formBuilder.group({\n      email: ['ejemplo@gmail.com', [Validators.required, Validators.email]],\n      pass: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {}\n  //METODO QUE LLAMAREMOS, PARA EL BOTON INICIAR SESION\n  login() {\n    if (this.loginFormulario.valid) {\n      console.log(\"Llamar al servicio de Login\");\n    } else {\n      alert(\"Error al ingresar los datos\");\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"pass\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \" Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_9_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(10, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginFormulario);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%]{\\n    margin: 10rem;\\n    padding: 6rem;\\n    background-color: rgb(146, 98, 35);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixhQUFhO0lBQ2Isa0NBQWtDO0FBQ3RDIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybXtcbiAgICBtYXJnaW46IDEwcmVtO1xuICAgIHBhZGRpbmc6IDZyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE0NiwgOTgsIDM1KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","LoginComponent","constructor","formBuilder","loginFormulario","group","email","required","pass","ngOnInit","login","valid","console","log","alert","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginComponent_Template_button_click_9_listener","ɵɵproperty"],"sources":["/home/carja/Documentos/GitHub/ProAsix/src/app/pages/login/login.component.ts","/home/carja/Documentos/GitHub/ProAsix/src/app/pages/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//IMPORTAMOS LA CLASE\nimport { FormBuilder, Validators} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login',\n  // standalone: true,\n  // imports: [CommonModule],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\n//INYECTAMOS EN EL CONSTRUCTOR\nexport class LoginComponent implements OnInit {\n  //CREAMOS EL FORMULARIO\n  loginFormulario=this.formBuilder.group({\n    email:['ejemplo@gmail.com',[Validators.required, Validators.email]],\n    pass:['',[Validators.required]],\n  })\n \n  constructor(private formBuilder:FormBuilder) { }\n  \n  ngOnInit():void{\n  }\n\n  //METODO QUE LLAMAREMOS, PARA EL BOTON INICIAR SESION\n  login(){\n    if(this.loginFormulario.valid){\n      console.log(\"Llamar al servicio de Login\")\n    } else {\n      alert(\"Error al ingresar los datos\")\n    }\n  }\n\n}\n\n\n","<form [formGroup]=\"loginFormulario\">\n    <!-- <div class=\"mb-3 form-row\" >\n        <div class=\"col\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\"> nombre</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"nombre\">\n        </div>\n        <div class=\"col\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\"> Apellidos </label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"apellidos\">\n        </div>\n    </div> -->\n\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\"> Email</label>\n      <input type=\"email\" formControlName=\"email\" class=\"form-control\" formControlName=\"email\" >\n    </div>\n\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" formControlName=\"pass\">\n    </div>\n\n    \n    <button type=\"submit\" (click)=\"login()\" class=\"btn btn-primary\">Iniciar Sesión</button>\n  </form>"],"mappings":"AAEA;AACA,SAAsBA,UAAU,QAAO,gBAAgB;;;AAUvD;AACA,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAN/B;IACA,KAAAC,eAAe,GAAC,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACrCC,KAAK,EAAC,CAAC,mBAAmB,EAAC,CAACN,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACM,KAAK,CAAC,CAAC;MACnEE,IAAI,EAAC,CAAC,EAAE,EAAC,CAACR,UAAU,CAACO,QAAQ,CAAC;KAC/B,CAAC;EAE6C;EAE/CE,QAAQA,CAAA,GACR;EAEA;EACAC,KAAKA,CAAA;IACH,IAAG,IAAI,CAACN,eAAe,CAACO,KAAK,EAAC;MAC5BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;KAC3C,MAAM;MACLC,KAAK,CAAC,6BAA6B,CAAC;;EAExC;EAAC,QAAAC,CAAA,G;qBAnBUd,cAAc,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdnB,cAAc;IAAAoB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCd3BX,EAAA,CAAAa,cAAA,cAAoC;QAasBb,EAAA,CAAAc,MAAA,aAAK;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACjEf,EAAA,CAAAgB,SAAA,eAA0F;QAC5FhB,EAAA,CAAAe,YAAA,EAAM;QAENf,EAAA,CAAAa,cAAA,aAAkB;QACsCb,EAAA,CAAAc,MAAA,eAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACtEf,EAAA,CAAAgB,SAAA,eAAmE;QACrEhB,EAAA,CAAAe,YAAA,EAAM;QAGNf,EAAA,CAAAa,cAAA,gBAAgE;QAA1Cb,EAAA,CAAAiB,UAAA,mBAAAC,gDAAA;UAAA,OAASN,GAAA,CAAAlB,KAAA,EAAO;QAAA,EAAC;QAAyBM,EAAA,CAAAc,MAAA,2BAAc;QAAAd,EAAA,CAAAe,YAAA,EAAS;;;QAvBrFf,EAAA,CAAAmB,UAAA,cAAAP,GAAA,CAAAxB,eAAA,CAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}